library(rvest)
library(stringr)
library(ggplot2)
library(plotly)
library(reshape2)
library(knitr)
library(leaflet)
# loading data from csv
setwd("c://MV data/swtMV")
newDataGC <- read.csv("data/GCdata.csv")
# function
plotCH4Data <- function(ssite) {
site_CH4 <- subset(newDataGC, newDataGC$site ==ssite) %>%
subset(.,CH4.ppm != "BSD")
plotdataFrame_site_CH4 <- data.frame(
date = as.Date(site_CH4$date, "%Y/%m/%d"),
ppm = as.numeric(as.vector(site_CH4$CH4.ppm))
)
figsite_CH4 <- plot_ly(
data = plotdataFrame_site_CH4,
x = plotdataFrame_site_CH4$date,
y = ~ppm,
type = "scatter",
mode = "markers+lines",
name = "CH4 Conc."
) %>%
layout(yaxis =list(title="Mathane (ppm)", rangemode = "tozero"))
return(figsite_CH4)
}
plotCO2Data <- function(sssite) {
site_CO2 <- subset(newDataGC, newDataGC$site == sssite) %>%
subset(.,CO2.ppm != "BSD")
plotdataFrame_site_CO2 <- data.frame(
date = as.Date(site_CO2$date, "%Y/%m/%d"),
ppm = as.numeric(as.vector(site_CO2$CO2.ppm))
)
figsite_CO2 <- plot_ly(
data = plotdataFrame_site_CO2,
x = plotdataFrame_site_CO2$date,
y = ~ppm,
type = "scatter",
mode = "markers+lines",
name = "CO2 Conc."
) %>%
layout(yaxis =list(title="CO2 (ppm)", rangemode = "tozero"))
return(figsite_CO2)
}
NS_CH4 <- plotCH4Data("NS")
NS_CO2 <- plotCO2Data("NS")
NS <- subplot(NS_CH4, NS_CO2, nrows = 2, shareX = TRUE)
NS
WD_1_CH4 <- plotCH4Data("WD-1")
WD_1_CO2 <- plotCO2Data("WD-1")
WD_1 <- subplot(WD_1_CH4, WD_1_CO2, nrows = 2, shareX = TRUE)
WD_1
library(httr)
library(XML)
library(stringr)
install.packages('XML')
library(httr)
library(XML)
library(stringr)
pcsc <- POST("ttp://e-service.cwb.gov.tw/HistoryDataQuery/QueryDataController.do?command=doQueryStation",
body = list(station_no='466910'))
pcsc <- POST("http://e-service.cwb.gov.tw/HistoryDataQuery/QueryDataController.do?command=doQueryStation",
body = list(station_no='466910'))
get_stores <- function(city, town) {
pcsc <- POST("http://emap.pcsc.com.tw/EMapSDK.aspx", body = list(commandid = "SearchStore", city = city, town = town))
stores <- xmlParse(content(pcsc, as = "text")) %>%
.["//GeoPosition"] %>%
xmlToDataFrame
return(stores)
}#從Firefox開發者介面觀察
storeDaan <- get_stores("台北市", "大安區")
View(storeDaan)
aapcsc <- POST("http://e-service.cwb.gov.tw/HistoryDataQuery/QueryDataController.do?command=doQueryStation",
body = list(station_no='466910'))
aastores <- xmlParse(content(pcsc, as = "text")) %>%
xmlToDataFrame
aapcsc <- POST("http://e-service.cwb.gov.tw/HistoryDataQuery/QueryDataController.do?command=doQueryStation",
body = list(station_no='466910'))
aastores <- xmlParse(content(aapcsc, as = "text")) %>%
xmlToDataFrame
url <- "http://e-service.cwb.gov.tw/HistoryDataQuery/QueryDataController.do?command=doQueryStation"
aapcsc <- POST(url, body = list(station_no='466910'))
aapcsc <- POST(url) #body = list(station_no='466910'))
aastores <- xmlParse(content(aapcsc, as = "text")) %>%
xmlToDataFrame
aapcsc
aapcsc <- POST(url) body = list(station_no=466910))
aapcsc <- POST(url, body = list(station_no=466910))
?(POST)
POST
pcsc <- POST("http://emap.pcsc.com.tw/EMapSDK.aspx",
body = list(commandid = "SearchStore", city = "台北市", town = "大安區"))
aastores <- xmlParse(content(aapcsc, as = "text")) %>%
xmlToDataFrame
aastores <- xmlParse(content(aapcsc, as = "text"))
setwd('c:/Taiwan-CWB-Data')
# Library Packages
library(magrittr)
library(httr)
library(rvest)
library(stringr)
library(reshape2)
library(knitr)
# Setwd
setwd('c:/Taiwan-CWB-Data')
Sys.setlocale(category = "LC_ALL", locale = "")
getDataformCWB <- function(station, timerange1, timerange2, iterm){
# ---------- input Targat Station ---------- #
# Load Station List
stationList <- read.csv("data/new_Station_List.csv")
inputStationName <- c(station) # "Location"
# ---------- input Date ---------- #
fromdate <- as.Date(timerange1) # "2017-01-06"
todate <- as.Date(timerange2) # "2017-01-06"
date <- seq.Date(fromdate, todate, "day")
lengthDate <- as.numeric(length(date))
lengthDatep <- as.numeric(lengthDate+1)
# ---------- URL ---------- #
url_1 <- "http://e-service.cwb.gov.tw/HistoryDataQuery/DayDataController.do?command=viewMain&station="
url_2 <- "&stname=%25E7%25AB%25B9%25E6%259D%25B1&datepicker="
url_1_1 <- paste(url_1, stationList$id, sep = "")
url_all <- paste(url_1_1, url_2, sep = "")
stationListnew <- cbind(stationList, url_all)
substation <- data.frame(subset(stationListnew, stationListnew$engName == inputStationName))
subdataframe <-data.frame(date=date, urldate = paste(substation$url_all, date ,sep=""))
# ---------- Xpath ---------- #
inputxpathName <- c(iterm) # "ex: press"
xpathrain <- "//table[@id='MyTable']/tbody/tr/td[11]" # Xpath for rain data
xpathHum <- "//table[@id='MyTable']/tbody/tr/td[6]" # Xpath for RH data
xpathTtem <- "//table[@id='MyTable']/tbody/tr/td[4]" # Xpath for Temperature data
xpathPres <- "//table[@id='MyTable']/tbody/tr/td[2]" # Xpath for StnPres data
XpathName <- c("Rain", "Hum", "Tem", "Press")
xpathurl <- c(xpathrain, xpathHum, xpathTtem, xpathPres)
xpathList <- data.frame(XpathName, xpathurl)
xpathselect_dataframe <- subset(xpathList, xpathList$XpathName == inputxpathName)
xpathSelect_result <- as.vector(xpathselect_dataframe$xpathurl)
#-----
hr24 <- data.frame(Hour=1:24)
for (i in 1:lengthDate){
urlhtml <- as.vector(subdataframe$urldate[i])# as.vector(date_dataFrame$urldate[1])
# doc <- read_html(urls)
datadoc <-read_html(urlhtml)# read_html(as.vector(date_dataFrame$urldate[1]))
data <- datadoc %>%
html_nodes(., xpath = xpathSelect_result)%>%
html_text
data_renew <- str_trim(sub("<U+00A0>",replacement ="",data)) # Delete something we don't need
hr24 <-cbind(hr24, data_renew)
}
names(hr24)[2:lengthDatep] <- as.vector(as.factor(date))
hr24_all <- melt(hr24, id=c("Hour") ) # Let them for one column
names(hr24_all) <- c("hour", "date", "data")
POStime <- as.POSIXct(paste(hr24_all$date, hr24_all$hour, sep = " "), "%Y-%m-%d %H", tz="GMT")
resultTable <- data.frame(time=POStime, data= hr24_all$data)
names(resultTable)[2] <-c(iterm)
return(resultTable)
}
Beiliao <- getDataformCWB("Beiliao", "2017-01-01", "2017-01-03", "Rain")
View(Beiliao)
Beiliao_R <- getDataformCWB("Beiliao", "2017-02-20", "2017-03-07", "Rain")
Beiliao_H <- getDataformCWB("Beiliao", "2017-02-20", "2017-03-07", "Hum")
Beiliao_T <- getDataformCWB("Beiliao", "2017-02-20", "2017-03-07", "Tem")
Beiliao_P <- getDataformCWB("Beiliao", "2017-02-20", "2017-03-07", "Press")
View(Beiliao_H)
setwd('c:/Taiwan-CWB-Data')
write.csv(Beiliao_R, "c://Taiwan-CWB-Data/writeCSV/Beiliao_R.csv")
write.csv(Beiliao_H, "c://Taiwan-CWB-Data/writeCSV/Beiliao_H.csv")
write.csv(Beiliao_T, "c://Taiwan-CWB-Data/writeCSV/Beiliao_T.csv")
write.csv(Beiliao_P, "c://Taiwan-CWB-Data/writeCSV/Beiliao_P.csv")
Beiliao <- data.frame(time=Beiliao_R$time, rain=Beiliao_R$Rain, Hum=Beiliao_H$Hum, Tem=Beiliao_T$Tem, press=Beiliao_P$Press)
View(Beiliao)
Beiliao_R <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Rain")
Beiliao_H <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Hum")
Beiliao_T <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Tem")
Beiliao_P <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Press")
Beiliao <- data.frame(time=Beiliao_R$time, rain=Beiliao_R$Rain, Hum=Beiliao_H$Hum, Tem=Beiliao_T$Tem, press=Beiliao_P$Press)
View(Beiliao)
library(kriging)
library(magrittr)
library(httr)
library(rvest)
library(stringr)
library(ggplot2)
library(plotly)
library(leaflet)
library(reshape2)
library(knitr)
library(shiny)
library(RJSONIO)
library(RCurl)
library(jsonlite)
library(httr)
library(XML)
library(stringr)
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+liners"
)
Beiliao_R_Plotly
Beiliao_R <- subset(Beiliao_R, Beiliao_R$Rain != "X")
View(Beiliao_R)
Beiliao <- data.frame(time=Beiliao_R$time, rain=Beiliao_R$Rain, Hum=Beiliao_H$Hum, Tem=Beiliao_T$Tem, press=Beiliao_P$Press)
Beiliao_R <- sub("X", replacement = 0, Beiliao_R)
Beiliao_R <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Rain")
rain <- sub("X", replacement = 0, Beiliao_R$Rain)
Beiliao_R <- data.frame(Beiliao_R$time, rain)
View(Beiliao_R)
Beiliao <- data.frame(time=Beiliao_R$time, rain=Beiliao_R$rain, Hum=Beiliao_H$Hum, Tem=Beiliao_T$Tem, press=Beiliao_P$Press)
Beiliao <- data.frame(time=Beiliao_R$time, rain=Beiliao_R$rain, Hum=Beiliao_H$Hum, Tem=Beiliao_T$Tem, press=Beiliao_P$Press)
Beiliao_R <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Rain")
rain <- sub("X", replacement = 0, Beiliao_R$Rain)
Beiliao_R <- data.frame(Beiliao_R$time, rain)
View(Beiliao_R)
Beiliao <- data.frame(time=Beiliao_R$time, rain=Beiliao_R$rain, Hum=Beiliao_H$Hum, Tem=Beiliao_T$Tem, press=Beiliao_P$Press)
View(Beiliao_R)
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+liners"
)
Beiliao_R_Plotly
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+lines"
)
Beiliao_R_Plotly
Beiliao_R$rain
rain <- sub("X", replacement = "0", Beiliao_R$Rain)
Beiliao_R <- data.frame(Beiliao_R$time, rain)
Beiliao <- data.frame(time=Beiliao_R$time,
rain=Beiliao_R$rain,
Hum=Beiliao_H$Hum,
Tem=Beiliao_T$Tem,
press=Beiliao_P$Press)
Beiliao_Rnew <- data.frame(Beiliao_R$time, rain)
Beiliao <- data.frame(time=Beiliao_R$time,
rain=Beiliao_Rnew$rain,
Hum=Beiliao_H$Hum,
Tem=Beiliao_T$Tem,
press=Beiliao_P$Press)
View(Beiliao_R)
rain <- sub("X", replacement = "0", Beiliao_R$Rain)
Beiliao_Rnew <- data.frame(Beiliao_R$time, rain)
Beiliao_R <- getDataformCWB("Beiliao", "2017-01-02", "2017-01-08", "Rain")
rain <- sub("X", replacement = "0", Beiliao_R$Rain)
rain
rain <- sub("X", replacement = "0.0", Beiliao_R$Rain)
Beiliao_Rnew <- data.frame(time=Beiliao_R$time, rain)
Beiliao <- data.frame(time=Beiliao_R$time,
rain=Beiliao_Rnew$rain,
Hum=Beiliao_H$Hum,
Tem=Beiliao_T$Tem,
press=Beiliao_P$Press)
Beiliao_R <- data.frame(time=Beiliao_R$time, rain)
Beiliao <- data.frame(time=Beiliao_R$time,
rain=Beiliao_Rnew$rain,
Hum=Beiliao_H$Hum,
Tem=Beiliao_T$Tem,
press=Beiliao_P$Press)
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+lines"
)
Beiliao_R_Plotly
Beiliao_T_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Tem,
type = "scatter",
mode = "markers+lines"
)
Beiliao_H_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Hum,
type = "scatter",
mode = "markers+lines"
)
Beiliao_P_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$press,
type = "scatter",
mode = "markers+lines"
)
Beiliao_T_Plotly
Beiliao_P_Plotly
Beiliao_H_Plotly
Beiliao_CWB <- subplot(Beiliao_T_Plotly, Beiliao_P_Plotly, Beiliao_H_Plotly, Beiliao_R_Plotly
shareX = TRUE
)
Beiliao_CWB <- subplot(Beiliao_T_Plotly, Beiliao_P_Plotly, Beiliao_H_Plotly, Beiliao_R_Plotly,
shareX = TRUE
)
Beiliao_CWB
Beiliao_CWB <- subplot(Beiliao_T_Plotly, Beiliao_P_Plotly, Beiliao_H_Plotly, Beiliao_R_Plotly,
nrows = 4,
shareX = TRUE
)
Beiliao_CWB
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+lines",
name = "Rain"
)
Beiliao_H_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Hum,
type = "scatter",
mode = "markers+lines",
name = "Hum"
)
Beiliao_T_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Tem,
type = "scatter",
mode = "markers+lines",
name = "Tem"
)
Beiliao_P_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$press,
type = "scatter",
mode = "markers+lines",
name = "Press"
)
Beiliao_CWB <- subplot(Beiliao_T_Plotly, Beiliao_P_Plotly, Beiliao_H_Plotly, Beiliao_R_Plotly,
nrows = 4,
shareX = TRUE
)
Beiliao_CWB
today <- as.Date("2017-03-08")
today
yesterday <- today-1
today <- Sys.Date()
tday <- Sys.Date()
yesterday <- today-1
Beiliao_R <- getDataformCWB("Beiliao", Sys.Date()-7, Sys.Date()-1, "Rain")
View(Beiliao_R)
Beiliao_R <- getDataformCWB("Beiliao", Sys.Date()-5, Sys.Date()-1, "Rain")
View(Beiliao_R)
Beiliao_R <- getDataformCWB("Beiliao", Sys.Date()-4, Sys.Date()-1, "Rain")
Beiliao_R <- getDataformCWB("Beiliao", Sys.Date()-4, Sys.Date()-1, "Rain")
rain <- sub("X", replacement = "0.0", Beiliao_R$Rain)
Beiliao_R <- data.frame(time=Beiliao_R$time, rain)
Beiliao_H <- getDataformCWB("Beiliao", Sys.Date()-4, Sys.Date()-1, "Hum")
Beiliao_T <- getDataformCWB("Beiliao", Sys.Date()-4, Sys.Date()-1, "Tem")
Beiliao_P <- getDataformCWB("Beiliao", Sys.Date()-4, Sys.Date()-1, "Press")
Beiliao <- data.frame(time=Beiliao_R$time,
rain=Beiliao_Rnew$rain,
Hum=Beiliao_H$Hum,
Tem=Beiliao_T$Tem,
press=Beiliao_P$Press)
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+lines",
name = "Rain"
)
Beiliao_H_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Hum,
type = "scatter",
mode = "markers+lines",
name = "Hum"
)
Beiliao_T_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Tem,
type = "scatter",
mode = "markers+lines",
name = "Tem"
)
Beiliao_P_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$press,
type = "scatter",
mode = "markers+lines",
name = "Press"
)
Beiliao_CWB <- subplot(Beiliao_T_Plotly, Beiliao_P_Plotly, Beiliao_H_Plotly, Beiliao_R_Plotly,
nrows = 4,
shareX = TRUE
)
Beiliao_CWB
View(storeDaan)
View(Beiliao)
View(Beiliao_H)
Beiliao <- data.frame(time=Beiliao_R$time,
rain=Beiliao_R$rain,
Hum=Beiliao_H$Hum,
Tem=Beiliao_T$Tem,
press=Beiliao_P$Press)
Beiliao_R_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$rain,
type = "scatter",
mode = "markers+lines",
name = "Rain"
)
Beiliao_H_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Hum,
type = "scatter",
mode = "markers+lines",
name = "Hum"
)
Beiliao_T_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$Tem,
type = "scatter",
mode = "markers+lines",
name = "Tem"
)
Beiliao_P_Plotly <- plot_ly(
data = Beiliao,
x = Beiliao$time,
y = Beiliao$press,
type = "scatter",
mode = "markers+lines",
name = "Press"
)
Beiliao_CWB <- subplot(Beiliao_T_Plotly, Beiliao_P_Plotly, Beiliao_H_Plotly, Beiliao_R_Plotly,
nrows = 4,
shareX = TRUE
)
Beiliao_CWB
teststationList <- read.csv("https://github.com/yichunsung/Taiwan-CWB-Data/blob/master/data/StationList.csv")
View(teststationList)
teststationList <- read.csv("https://www.dropbox.com/s/k7xt07efqm10hj1/RAD7_data_range_value.csv")
View(teststationList)
teststationList <- read.csv("https://docs.google.com/spreadsheets/d/1OGHDstco8-tqoPSip9of__6s2fvkzpNj2vZ4cTLV454/edit#gid=0&range=A1")
View(storeDaan)
View(teststationList)
teststationList <- html_text("https://docs.google.com/spreadsheets/d/1OGHDstco8-tqoPSip9of__6s2fvkzpNj2vZ4cTLV454/edit#gid=0&range=A1")
setwd('c://Nanhua')
setwd('c://Nanhua')
Sys.setlocale(category = "LC_ALL", locale = "")
rwaData <- read.csv("data/0000.csv")
View(rwaData)
timeforRAWDATA <- rwaData[2]
View(timeforRAWDATA)
timeforRAWDATA <- rwaData[[2]]
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS")
timeforRAWDATA
View(rwaData)
temforRAWDATA <- as.numeric(as.vector(rwaData[[4]]))
TimeforTemperture <- data.frame(time=timeforRAWDATA, Temperture=temforRAWDATA)
View(TimeforTemperture)
Nanhua_water <-plot_ly(
data = TimeforTemperture,
x = TimeforTemperture$time,
y = TimeforTemperture$Temperture,
type = "scatter",
mode = "markers+lines"
)
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS", tz="GMT")
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS", tz="GMT")
temforRAWDATA <- as.numeric(as.vector(rwaData[[4]]))
TimeforTemperture <- data.frame(time=timeforRAWDATA, Temperture=temforRAWDATA)
Nanhua_water <-plot_ly(
data = TimeforTemperture,
x = TimeforTemperture$time,
y = TimeforTemperture$Temperture,
type = "scatter",
mode = "markers+lines"
)
Nanhua_water
View(TimeforTemperture)
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS", tz="GMT")
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS")
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS", tz=tz)
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS", tz=GMT)
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS", tz="GMT")
timeforRAWDATA <- as.POSIXct(rwaData[[2]], "%Y/%m/%d %HH:%MM:%SS")
temforRAWDATA <- as.numeric(as.vector(rwaData[[4]]))
TimeforTemperture <- data.frame(time=timeforRAWDATA, Temperture=temforRAWDATA)
Nanhua_water <-plot_ly(
data = TimeforTemperture,
x = TimeforTemperture$time,
y = TimeforTemperture$Temperture,
type = "scatter",
mode = "markers+lines"
)
Nanhua_water
